{"pageProps":{"post":{"slug":"32","content":"※ この記事は、私が2022/12/31に書いたメモを転記したものです。\n\n---\n\n## はじめに\n\nSelenium+Python環境をDockerで作った際のメモ．基本的に下記の記事を参考に行った:\n\n> 参考記事: [第662回　Docker+Selenium ServerでWebブラウザ自動操作環境を作る | gihyo.jp](https://gihyo.jp/admin/serial/01/ubuntu-recipe/0662)\n\nまた，記事中のコードは下記リポジトリに上がっている:\n\n> リポジトリ: https://github.com/yamamoto-yuta/selenium-on-docker-sample\n\n## 手順\n\n### 1. Dockerイメージをpull\n\n今回はスクレイピングできればOKだったので `standalone-chrome` をpullした\n\n```\n$ docker pull selenium/standalone-chrome\n```\n\n### 2. 素のイメージにはpipとseleniumが入っていないので，入れたイメージをDockerfileで作成\n\n```\nFROM selenium/standalone-chrome\n\nUSER root\nRUN apt-get update && apt-get upgrade -y && apt install -y python3-pip\n\nUSER 1200\nRUN pip3 install selenium\n```\n\nなお， `apt` コマンドを使おうとしたら Permission denied と言われたので，一時的に root ユーザにしている:\n\n```\n=> ERROR [2/3] RUN apt-get update && apt-get upgrade -y && apt install -y python3-pip                                                            1.0s\n------\n > [2/3] RUN apt-get update && apt-get upgrade -y && apt install -y python3-pip:\n#0 0.900 Reading package lists...\n#0 0.925 E: List directory /var/lib/apt/lists/partial is missing. - Acquire (13: Permission denied)\n------\nfailed to solve: executor failed running [/bin/sh -c apt-get update && apt-get upgrade -y && apt install -y python3-pip]: exit code: 100\n```\n\n### 3. 環境設定を `docker-compose.yml` にまとめる\n\n```yml\nversion: \"3.9\"\n\nservices:\n  app:\n    build: .\n    image: \"selenium-on-docker-sample\"\n    container_name: \"selenium-on-docker-sample\"\n    volumes:\n      - /dev/shm:/dev/shm\n      - .:/usr/src/app\n    working_dir: /usr/src/app\n```\n\nポイントは下記の volumes 設定．この設定ではホストのメモリ領域 `/dev/shm` をマウントしている．これをしておかないとメモリ不足で正常に動作しないことがあるらしい:\n\n```yml\n    volumes:\n      - /dev/shm:/dev/shm\n```\n\n> 参考: [Seleniumをdockerで動かすと異様に遅い 特定サイトで落ちる場合の対処法 │ wonwon eater](https://wonwon-eater.com/python-selenium-docker/)\n\nなお，上記の方法はホストOSがLinuxの場合に使える方法で，他のOSの場合は直接サイズを指定する方法があるらしい:\n\n```yml\n    build:\n    context: .\n    shm_size: '2gb'\n```\n> 参考: [Seleniumをdockerで動かすと異様に遅い 特定サイトで落ちる場合の対処法 │ wonwon eater](https://wonwon-eater.com/python-selenium-docker/)\n\n公式ドキュメント:\n\n> 1. Start a Docker container with Firefox\n> ```\n> docker run -d -p 4444:4444 -p 7900:7900 --shm-size=\"2g\" selenium/standalone-firefox:4.7.2-20221219\n> ```\n> （中略）\n> ☝️ When executing docker run for an image that contains a browser please use the flag --shm-size=2g to use the host's shared memory.\n> \n> 引用: [SeleniumHQ/docker-selenium: Docker images for Selenium Grid](https://github.com/SeleniumHQ/docker-selenium)\n\n### 3. コンテナを起動して中に入る\n\n```\n$ docker compose up\n$ docker exec -it <CONTAINER_ID> bash\n```\n\n### 4. スクレイピングスクリプトを実行\n\n今回は下記のようなスクレイピングスクリプト `sample.py` を作成した．内容としては，「webdriver」でググって検索結果のページタイトルを標準出力する．\n\n```python\nimport time\n\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\n\n\n# Chromeのオプション\noptions = webdriver.ChromeOptions()\ndriver = webdriver.Chrome('chromedriver', options=options)\n\n\ntry:\n    # 要素の待機時間を最大10秒に設定\n    driver.implicitly_wait(10)\n\n    # http://www.google.com を開く\n    driver.get(\"http://www.google.com\")\n\n    # 検索ボックスに「webdriver」と入力して検索\n    driver.find_element(By.NAME, \"q\").send_keys(\"webdriver\" + Keys.ENTER)\n    time.sleep(5)\n\n    # 検索結果のタイトルを取得して出力\n    element_titles = driver.find_elements(By.TAG_NAME, \"h3\")\n    for element_title in element_titles:\n        print(element_title.text)\n\nexcept:\n    import traceback\n    traceback.print_exc()\n\nfinally:\n    # Chromeを終了\n    input(\"何かキーを押すと終了します...\")\n    driver.quit()\n```\n\n実行結果:\n\n```\nseluser@aefbc6616615:/usr/src/app$ python3 sample.py \nWebDriver - Selenium\nWebDriver を使用して Microsoft Edge を自動化する\nWebDriver - MDN Web Docs - Mozilla\nWebDriver について私が知っていること (2017 年版)\n\n\n\n\n10分で理解する Selenium - Qiita\nChromeDriver - WebDriver for Chrome\n7. WebDriver API — Selenium Python Bindings 2 ドキュメント\nWebDriverマウスとキーボードイベント\nPythonで自動化しよう！ ー Selenium Webdriverを ...\n何かキーを押すと終了します...\n```\n\n## 過程で調べたこと\n\n### `/dev/shm` って何？\n\ntmpfsというLinuxマシンのメモリに作成できるファイルシステムのマウントポイントの1つ．tmpfsは一見RAMディスクっぽいが，tmpfsはファイルシステムのためフォーマットが不要という違いがある（そのため，あらかじめ容量を確保する必要が無く，使用した分だけメモリを消費する）．\n\n`/dev/shm` を利用するには，好きなディレクトリをマウントする．\n\n> 参考: [tmpfs - Linux技術者認定 LinuC | LPI-Japan](https://linuc.org/study/knowledge/441/)\n\n### Seleniumは3系と4系で書き方が変わっている\n\n[元記事](https://gihyo.jp/admin/serial/01/ubuntu-recipe/0662) では `find_elements_by_*` 系メソッドが用いられていたが，それらはバージョン4.3.0廃止されており，現在は下記のような書き方になっている模様:\n\n3系:\n\n```python\ndriver.find_elements_by_class_name(\"content\")\n```\n\n4系:\n\n```python\n# 引数にまとめて書くやり方に統一される\nfrom selenium.webdriver.common.by import By\ndriver.find_elements(By.CLASS_NAME, \"content\")\n```\n\n> 引用: [【Selenium】急にAttributeError: 'WebDriver' object has no attributeが起きた - Qiita](https://qiita.com/syoshika_/items/288fc8bf552672589f4c)\n\n","title":"Selenium+Python環境をDockerで作ったときのメモ","posted_at":"2023年12月03日 17時43分","updated_at":"","tags":[],"description":"※ この記事は、私が2022/12/31に書いたメモを転記したものです。  ---  ## はじめに  Selenium+Python環境をDockerで作った際のメモ．基本的に下記の記事を参考に行った:  > 参考記事: [第662回　Docker+Selenium ServerでWebブラウザ自動操作環境を作る | gihyo.jp](https://gihyo.jp/admin/serial..."},"config":{"blog_title":"yamamoto-yuta.github.io","site_introduction":"Yamamoto's personal blog","copylight_name":"YutaYamamoto","copylight_url":"https://github.com/yamamoto-yuta","issues_page_url":"https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/issues","favicon_image_url":"https://user-images.githubusercontent.com/55144709/217254968-e131c8d3-3846-4569-8d05-06ccdba503a5.png","author_name":"Yuta Yamamoto","author_introduction":"It's me.","avatar_image_url":{"url":"https://user-images.githubusercontent.com/55144709/217254968-e131c8d3-3846-4569-8d05-06ccdba503a5.png","path":"/static/images/config/avatar.webp"},"sns":[{"name":"GitHub","url":"https://github.com/yamamoto-yuta"},{"name":"Twitter","url":"https://twitter.com/__Y4M4MOTO__"},{"name":"Facebook","url":"https://www.facebook.com/atuXamamoto/"}]},"postsMap":{"15":{"slug":"15","title":"公開業績一覧","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 21時28分","content":"","updated_at":"","description":""},"16":{"slug":"16","title":"API経由でSlackへカスタム絵文字を追加できないか調査したときのメモ","tags":[],"posted_at":"2023年05月06日 25時56分","content":"","updated_at":"","description":""},"17":{"slug":"17","title":"いつも使ってるSlack向け絵文字ジェネレーターがどうやって絵文字を生成してるか調べてみたメモ","tags":[],"posted_at":"2023年05月07日 25時08分","content":"","updated_at":"","description":""},"18":{"slug":"18","title":"Plasmo 触ってみたメモ","tags":[],"posted_at":"2023年06月04日 21時54分","content":"","updated_at":"","description":""},"20":{"slug":"20","title":"Rust 版 ls-Improved 導入メモ","tags":[],"posted_at":"2023年07月23日 23時50分","content":"","updated_at":"","description":""},"22":{"slug":"22","title":"Function Calling 触ってみたメモ","tags":[],"posted_at":"2023年11月25日 20時54分","content":"","updated_at":"","description":""},"23":{"slug":"23","title":"Slack の Slash Commands 作成メモ","tags":[],"posted_at":"2023年11月25日 26時45分","content":"","updated_at":"","description":""},"24":{"slug":"24","title":"Trello + Discord 連携メモ","tags":[],"posted_at":"2023年11月29日 09時10分","content":"","updated_at":"","description":""},"30":{"slug":"30","title":"PageRankメモ","tags":[],"posted_at":"2023年12月03日 17時34分","content":"","updated_at":"","description":""},"31":{"slug":"31","title":"SlackDeckの通知多重で鳴っちゃう問題で詰んだ話","tags":[],"posted_at":"2023年12月03日 17時39分","content":"","updated_at":"","description":""}},"metadata":{"https://tech.yappli.io/entry/decoding-multi-encoded-urls":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"BigQuery内にある多重エンコードされたURLのデコード - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本です（ @__Y4M4MOTO__ ）です。 今回は、ヤプリのデータ基盤内にあるウェブビューURLのデコードに取り組んでみました。この記事では、その際につまづいたポイントやその解決策について記します。 ウェブビューURLのエンコード問題 最初のデコード方法｜単純にデコードする 次のデコード方法｜ %25 だけ先にデコードする 最終的なデコード方法｜ r’%25(25)* で先にデコードする まとめ ウェブビューURLのエンコード問題 ヤプリではアプリ内のスクリーンデータを計測しています。これにより、スクリーンビューの集計等の分析を行うことができます。スク…","image_url":"/static/images/external_ogp//fefc59882c98a9c97a4892622419eae4.webp","site_name":"Yappli Tech Blog"},"https://note.com/times_yappli/n/n35e1f320ba35":{"url_domain":"note.com","url_domain_link":"https://note.com","title":"新卒メンバー企画！「部活動紹介ランチ」とその誕生秘話 #今日のヤプリ｜#times_yappli","description":"こんにちは、4月に23新卒データサイエンティストとして入社したもっさん（ @__Y4M4MOTO__ ）です！  今回は、23新卒メンバーで企画・運営した『あなたの好きを見つけよう！23卒企画部活動紹介ランチ』についてご紹介したいと思います！  「部活動紹介ランチ」ってどんなイベント？  そもそも『部活動紹介ランチ』ってどんなイベントなのか？をご紹介します！ 部活動紹介ランチとは、その名の通りヤプリの部活動を紹介するランチ会です。ご飯を食べながら、各部の代表者の3分プレゼンを聞き、部員との交流会を実施しました！ 「部活動紹介ランチ」のイベント概要 イベント企画の誕生経緯  このイベント","image_url":"/static/images/external_ogp//27232b680e47836c12adfb5f940b60a5.webp","site_name":"note（ノート）"},"https://qiita.com/yamamoto-yuta/items/826de40c414655e19ced":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"CSV テキストと Markdown Table をキーボードショートカットで相互変換できる Chrome 拡張機能作ってみた #JavaScript - Qiita","description":"CSV テキストと Markdown Table をキーボードショートカットで相互変換できる Chrome 拡張機能作ってみました。この記事では、作ったものの仕組みや開発にあたって工夫・苦労した点な…","image_url":"/static/images/external_ogp//fb90ff6b11831302d074d12726990ebe.webp","site_name":"Qiita"},"https://qiita.com/yamamoto-yuta/items/412b6e8167758e174d0a":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"Docker で dbt プロジェクトを始める方法をいくつか試してみた #Docker - Qiita","description":"この記事は何？Docker を使った dbt 環境の構築方法には様々なものがあります（公式の dbt イメージを使う、 Python イメージに dbt をインストールする、 etc...）。こ…","image_url":"/static/images/external_ogp//0191d6e1271561e71b362d24f553b085.webp","site_name":"Qiita"},"https://tech.yappli.io/entry/tech-book-lt-understand-docker":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"「『Docker よくわからない』を終わりにする本」を読んだので社内LT発表してきた話 - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 プロダクト開発本部では毎月「プラットフォーム技術共有会」という技術共有の場が設けられています。以前、下記の技術書を読んでこちらの会で発表してきました。 zenn.dev この記事では、その時発表した利用を公開しています（発表したのが昨年なので、情報が古くなっている可能性があります。ご了承ください🙇）。 speakerdeck.com 以下、発表資料をテキストに直したものです。 どんな本？ [Q.] どんな本？ [A.] 「Docker よくわからない」を終わりにする本。 [Q.] 読んでみてどうだった？ [A.]…","image_url":"/static/images/external_ogp//13638c9601be9a316f4582e79852ecbf.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/extract-app-store-review-to-spreadsheet-by-trocco":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"trocco で App Store のレビューをスプレッドシートへ書き出す - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 ヤプリは去年、 レビューダイアログ機能 をリリースしました。これによりレビューを用いた効果検証を行いたい場面が増えています。そのため、現在、 iTunes Search API と trocco を使って毎日アプリの評価点数を取得しています。 しかし、この記事を執筆している 2023年5月30日時点では iTunes Search API でレビューのコメントなどは取得できません。基本的に評価点数があれば十分ではあるのですが、コメントなどの訂正情報が欲しい場合もあります。 そこで、今回は trocco を使って …","image_url":"/static/images/external_ogp//1bac9454c8ebdd65cb94200b031ab077.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/lightning-talk-8":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"プロダクト開発本部LT大会#8を開催しました - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本です（ @__Y4M4MOTO__ ）。 先日、プロダクト開発本部で LT 大会が開催されました。8回目を迎えた今回も、プロダクト開発本部を始めとして他部署の方々も参加してくださり大盛況でした！ この記事では、当日の様子やその発表内容などについてご紹介したいと思います。 どんな大会？ LT 大会は5分程度の短いプレゼン（ライトニングトーク）を行うイベントです。プロダクト開発本部の LT 大会は次のルールで開催されています: 発表者及び発表者順は基本挙手制 発表時間は1人5分目安 発表内容は自由 発表内容が自由ということで、毎回、自己紹介や過去の経験談、個…","image_url":"/static/images/external_ogp//bec037281cca17480c802a8c8bc6d991.webp","site_name":"Yappli Tech Blog"},"https://zenn.dev/aidemy/articles/425cf7d9f31945":{"url_domain":"zenn.dev","url_domain_link":"https://zenn.dev","title":"質問対応業務を DX した話","description":null,"image_url":"/static/images/external_ogp//9851477567e45b90cbda805402d98132.webp","site_name":"Zenn"},"https://tech.yappli.io/entry/gig-program2022":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"内定者インターン生が G.I.G. プログラムに参加して Professional Data Engineer 認定資格を取得した話 - Yappli Tech Blog","description":"Google Cloud Japan 様主催の G.I.G. Japan Program というトレーニングプログラムに内定者インターン生が参加し、 Google Cloud Professional Data Engineer 認定資格をした体験記です。","image_url":"/static/images/external_ogp//8252492c363e32205e801495bfce4867.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/optimize_notifications_release_time":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"インターン生がプッシュ通知の配信時刻最適化に取り組んでみた！ - Yappli Tech Blog","description":"はじめに 初めまして。長岡技術科学大学の山本（ もっさん / @__Y4M4MOTO__ ）と申します。9 月中旬から 11 月までの 2 カ月半、プロダクト開発本部の技術戦略室にて、データサイエンティストのインターンをさせていただきました。この記事では、私がインターン中に取り組んだ「プッシュ通知の配信時刻最適化 PoC」の話をしたいと思います。 背景 Yappliの主要機能の1つにプッシュ通知があります。今回、クライアントの満足度向上のために、プッシュ通知の開封率を高める手段を検証しました。アイデアとして、以下を考えました。 ユーザがすぐ開封しやすい時間を推定し、その時間にプッシュ通知を配信…","image_url":"/static/images/external_ogp//5982363a6569af359c39495408362211.webp","site_name":"Yappli Tech Blog"},"https://github.com/yamamoto-yuta/csv2md-shortcut/issues/35":{"url_domain":"github.com","url_domain_link":"https://github.com","title":"popup でも変換できるようにする · Issue #35 · yamamoto-yuta/csv2md-shortcut · GitHub","description":"ブラウザ以外のエディタでもサクッと使いたいので。","image_url":"/static/images/external_ogp//9ad5ca706cab231c15e8cb46dfe2bf0f.webp","site_name":"GitHub"},"https://github.com/yamamoto-yuta/chrome-extension-injected-code-debug":{"url_domain":"github.com","url_domain_link":"https://github.com","title":"GitHub - yamamoto-yuta/chrome-extension-injected-code-debug","description":"Contribute to yamamoto-yuta/chrome-extension-injected-code-debug development by creating an account on GitHub.","image_url":"/static/images/external_ogp//860351a12e290ae311686c939c45298c.webp","site_name":"GitHub"},"https://tech.yappli.io/entry/yapplitechconf2023-data":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"「次の10年を戦える分析用データ基盤構築の第一歩 - dbtによる基盤刷新とクエリ費用90%削減への取り組み -」という発表をしてきました！  #Yappli Tech Conference 2023 - Yappli Tech Blog","description":"こんにちは！プロダクト開発本部・データサイエンティストの山本（@__Y4M4MOTO__ ）です。 先日開催された Yappli Tech Conference 2023 にて、 「次の10年を戦える分析用データ基盤構築の第一歩 - dbtによる基盤刷新とクエリ費用90%削減への取り組み -」というタイトルで発表してきました！（色々詰め込んだら発表タイトルが長くなってしまいました…😇） この記事では、そのときの発表動画と資料を公開しています！ アーカイブ動画 youtu.be スライド speakerdeck.com 発表概要 本発表では次の2つについてお話ししています。 ヤプリの分析用データ…","image_url":"/static/images/external_ogp//642a1ee5c7fa2a9c6fd11a82fb3ccfc6.webp","site_name":"Yappli Tech Blog"},"https://dev.classmethod.jp/articles/understand-openai-function-calling/":{"url_domain":"dev.classmethod.jp","url_domain_link":"https://dev.classmethod.jp","title":"[OpenAI] Function callingで遊んでみたら本質が見えてきたのでまとめてみた | DevelopersIO","description":"Function callingというよりFunction call preparingでした。","image_url":"https://devio2023-media.developers.io/wp-content/uploads/2023/04/eyecatch_openai_1200x630.png","site_name":"クラスメソッド発「やってみた」系技術メディア | DevelopersIO"},"https://ngrok.com/download":{"url_domain":"ngrok.com","url_domain_link":"https://ngrok.com","title":"Download","description":null,"image_url":null,"site_name":null},"https://ngrok.com/docs/errors/err_ngrok_6022/":{"url_domain":"ngrok.com","url_domain_link":"https://ngrok.com","title":"ERR_NGROK_6022 | ngrok documentation","description":"Message","image_url":"/static/images/external_ogp//3bc3eb06ac879a94e187d8c615205e93.webp","site_name":null},"https://qiita.com/yamamoto-yuta/items/474e03cd28dec55fd5a2":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"trocco のカスタム変数ループ実行で複数の BigQuery テーブルを一括クローンする #BigQuery - Qiita","description":"この記事は trocco Advent Calendar 2023 の 2 日目の記事となります。この記事では、trocco のカスタム変数ループ実行を使い、複数の BigQuery テーブルを一…","image_url":"/static/images/external_ogp//381b5f8ca39c59f5eca1d9c08593390a.webp","site_name":"Qiita"},"https://tech.yappli.io/entry/lightning-talk-10":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"プロダクト開発本部LT大会#10を開催しました - Yappli Tech Blog","description":"（本記事は Yappli Advent Calendar 2023 （2枚目） の2日目の記事です！🎄📅） こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 先日、プロダクト開発本部にてLT大会を開催しました！（遂に10回目です！✨） 今回はなんと取締役執行役員CTOのげんきさんが久々に発表者エントリー！！さらに、当日の飛び入りエントリーもあり、発表者と聴講参加者合わせて約 50 人もの方々にご参加いただきました！🙌 この記事では、当日の様子やその発表内容などについてご紹介します！ どんな大会？ 発表内容 PICK UP! 『ゴミの日リマインダー』 『植物を育て…","image_url":"/static/images/external_ogp//3b22aeddd0ff17d06ce6b89971485537.webp","site_name":"Yappli Tech Blog"},"https://chrome.google.com/webstore/detail/slackdeck/cocnkjpcbmoopfpmogblnjpjdfcaohod":{"url_domain":"chrome.google.com","url_domain_link":"https://chrome.google.com","title":"SlackDeck - Chrome Web Store","description":"Arrange channels side-by-side","image_url":"/static/images/external_ogp//7a7aa934b286dbd42fc111be0535c790.webp","site_name":null},"https://tech.yappli.io/entry/zapier-slack-to-jira-with-azure-openai":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"Zapier を使って Slack → Jira 起票＆ Azure OpenAI Service でチケットタイトル生成 - Yappli Tech Blog","description":"（本記事は Yappli Advent Calendar 2023 （1枚目） の5日目の記事です！🎄📅） こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 最近、データサイエンスチーム（以下、 DS チーム）では社内からの依頼（集計、技術相談 etc. ）を Jira でチケット管理をするようにしました。チケット運用を始めるにあたってネックになったのが「起票するの、面倒くさくない…？」という点です。 その点を解決するため、 Slack のメッセージにリアクションを押すとその内容で Jira のチケットを作成してくれる Zapier ワークフローを作成しました。…","image_url":"/static/images/external_ogp//ad87198dd41d620ae8a30d78a13c55e2.webp","site_name":"Yappli Tech Blog"}},"relatedPosts":[{"slug":"17","title":"いつも使ってるSlack向け絵文字ジェネレーターがどうやって絵文字を生成してるか調べてみたメモ","tags":[],"posted_at":"2023年05月07日 25時08分","content":"","updated_at":"","description":""},{"slug":"20","title":"Rust 版 ls-Improved 導入メモ","tags":[],"posted_at":"2023年07月23日 23時50分","content":"","updated_at":"","description":""},{"slug":"18","title":"Plasmo 触ってみたメモ","tags":[],"posted_at":"2023年06月04日 21時54分","content":"","updated_at":"","description":""},{"slug":"23","title":"Slack の Slash Commands 作成メモ","tags":[],"posted_at":"2023年11月25日 26時45分","content":"","updated_at":"","description":""},{"slug":"22","title":"Function Calling 触ってみたメモ","tags":[],"posted_at":"2023年11月25日 20時54分","content":"","updated_at":"","description":""},{"slug":"15","title":"公開業績一覧","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 21時28分","content":"","updated_at":"","description":""},{"slug":"30","title":"PageRankメモ","tags":[],"posted_at":"2023年12月03日 17時34分","content":"","updated_at":"","description":""},{"slug":"31","title":"SlackDeckの通知多重で鳴っちゃう問題で詰んだ話","tags":[],"posted_at":"2023年12月03日 17時39分","content":"","updated_at":"","description":""},{"slug":"24","title":"Trello + Discord 連携メモ","tags":[],"posted_at":"2023年11月29日 09時10分","content":"","updated_at":"","description":""},{"slug":"16","title":"API経由でSlackへカスタム絵文字を追加できないか調査したときのメモ","tags":[],"posted_at":"2023年05月06日 25時56分","content":"","updated_at":"","description":""}]},"__N_SSG":true}