{"pageProps":{"post":{"slug":"38","content":"この前、 BigQuery で LEFT JOIN するクエリを書いていた時に少しつまづいたので、その時の調査結果を備忘録として残す（おそらく BigQuery に限らず SQL 全般の話だと思うので、記事タイトルは「SQL の」としている）。\n\n## 前提: 対象データ\n\n次のような3つのテーブルを考える。\n\n<img src='/static/images/articles/38/547c416a09bb8a977b555e5b31a498fc.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/62220c0c-8dae-4194-a2b5-d4a85cd65915' alt='image' />\n\n## LEFT JOIN してみる①\n\nこの3つのテーブルを JOIN して、 `(item_key, item_code, shop_id)` の組み合わせテーブルを作ることを考える。\n\n今回は次の3パターンの LEFT JOIN で実現してみる。\n\n1. 次の順で LEFT JOIN する: <font color=\"lime\">ItemShops</font> → <font color=\"deepskyblue\">Shops</font>\n2. 次の順で LEFT JOIN する: <font color=\"red\">Items</font> → <font color=\"lime\">ItemShops</font> → <font color=\"deepskyblue\">Shops</font>\n3. 次の順で LEFT JOIN する: <font color=\"lime\">ItemShops</font> → <font color=\"deepskyblue\">Shops</font> → <font color=\"red\">Items</font>\n\n### パターン1: ItemShops → Shops\n\n<details><summary>クエリ</summary>\n\n```sql\nWITH\n\nItems AS (\n  SELECT 'xxx' AS item_key, 'aaa' AS item_code\n  UNION ALL\n  SELECT 'yyy', 'bbb'\n),\n\nItemShops AS (\n  SELECT 'aaa' AS item_code, 1 AS shop_id\n  UNION ALL\n  SELECT 'aaa', 2\n  UNION ALL\n  SELECT 'bbb', 1\n  UNION ALL\n  SELECT 'bbb', 2\n),\n\nShops AS (\n  SELECT 1 AS shop_id, 'xxx' AS item_key\n  UNION ALL\n  SELECT 2, 'yyy'\n)\n\nSELECT\n  C.item_key,\n  B.item_code,\n  B.shop_id\nFROM\n  ItemShops B\nLEFT JOIN\n  Shops C USING(shop_id)\n```\n  \n</details><br />\n\n結果:\n\n<img src='/static/images/articles/38/b0972363b8f0da6a1c34d328d565f750.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/f6321f56-cd6d-4865-ae5c-62b469502516' alt='image' />\n\n`(item_key, item_code)` の組み合わせがおかしい行が出てしまうため、この JOIN 方法では実現できない。\n\n### パターン2: Items → ItemShops → Shops\n\n<details><summary>クエリ</summary>\n\n```sql\nWITH\n\nItems AS (\n  SELECT 'xxx' AS item_key, 'aaa' AS item_code\n  UNION ALL\n  SELECT 'yyy', 'bbb'\n),\n\nItemShops AS (\n  SELECT 'aaa' AS item_code, 1 AS shop_id\n  UNION ALL\n  SELECT 'aaa', 2\n  UNION ALL\n  SELECT 'bbb', 1\n  UNION ALL\n  SELECT 'bbb', 2\n),\n\nShops AS (\n  SELECT 1 AS shop_id, 'xxx' AS item_key\n  UNION ALL\n  SELECT 2, 'yyy'\n)\n\nSELECT\n  A.item_key AS A_item_key,\n  C.item_key AS C_item_key,\n  B.item_code,\n  B.shop_id,\nFROM\n  Items A\nLEFT JOIN\n  ItemShops B USING(item_code)\nLEFT JOIN\n  Shops C USING(shop_id)\n```\n\n</details><br />\n\n結果:\n\n<img src='/static/images/articles/38/483e9aa289665df100754be39c81f651.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/a1ec4eeb-e012-4f99-b7e1-60a7015b540e' alt='image' />\n\n`A_item_key` （＝ `Items.item_key` ）を採用しないと対応がおかしくなる。\n\n### パターン3: ItemShops → Shops → Items\n\n\n<details><summary>クエリ</summary>\n\n```sql\nWITH\n\nItems AS (\n  SELECT 'xxx' AS item_key, 'aaa' AS item_code\n  UNION ALL\n  SELECT 'yyy', 'bbb'\n),\n\nItemShops AS (\n  SELECT 'aaa' AS item_code, 1 AS shop_id\n  UNION ALL\n  SELECT 'aaa', 2\n  UNION ALL\n  SELECT 'bbb', 1\n  UNION ALL\n  SELECT 'bbb', 2\n),\n\nShops AS (\n  SELECT 1 AS shop_id, 'xxx' AS item_key\n  UNION ALL\n  SELECT 2, 'yyy'\n)\n\nSELECT\n  A.item_key AS A_item_key,\n  C.item_key AS C_item_key,\n  B.item_code,\n  B.shop_id,\nFROM\n  ItemShops B\nLEFT JOIN\n  Shops C USING(shop_id)\nLEFT JOIN\n  Items A USING(item_code)\n```\n\n</details><br />\n\n結果:\n\n<img src='/static/images/articles/38/08295481be6e380400b123bcaa9f8524.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/e4ea918e-51b9-4bcb-9106-9c8de870a9c9' alt='image' />\n\nパターン2と同じ。\n\n##  LEFT JOIN してみる②\n\n何らかの理由で `Items` テーブルに存在しない `item_key` が `Shops` テーブルに組まれている状況を考える。\n\n<img src='/static/images/articles/38/645b0796c136fad9d53206ca18986af9.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/f5d45f9e-bb8c-4b71-b663-1410081d33c5' alt='image' />\n\n`Shops.item_key = \"yyy\"` は `Items` テーブルに存在しない。\n\nこの状況で、先ほどと同じ3パターンの LEFT JOIN を行ってみる。\n\n\n### パターン1: ItemShops → Shops\n\n<details><summary>クエリ</summary>\n\n```sql\nWITH\n\nItems AS (\n  SELECT 'xxx' AS item_key, 'aaa' AS item_code\n),\n\nItemShops AS (\n  SELECT 'aaa' AS item_code, 1 AS shop_id\n  UNION ALL\n  SELECT 'aaa', 2\n  UNION ALL\n  SELECT 'bbb', 1\n  UNION ALL\n  SELECT 'bbb', 2\n),\n\nShops AS (\n  SELECT 1 AS shop_id, 'xxx' AS item_key\n  UNION ALL\n  SELECT 2, 'yyy'\n)\n\nSELECT\n  C.item_key,\n  B.item_code,\n  B.shop_id\nFROM\n  ItemShops B\nLEFT JOIN\n  Shops C USING(shop_id)\n```\n  \n</details><br />\n\n結果:\n\n<img src='/static/images/articles/38/41b0f2f5afee5220f72289cde697363a.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/38455cbd-9981-48ca-9682-4cd7a00f3c22' alt='image' />\n\n存在しないはずの `item_key = \"yyy\"` の行が残っていたり、 `(item_key, item_code)` の組み合わせがおかしい行が存在していたりしており、適切な JOIN 方法ではないことがわかる。\n\n### パターン2: Items → ItemShops → Shops\n\n<details><summary>クエリ</summary>\n\n```sql\nWITH\n\nItems AS (\n  SELECT 'xxx' AS item_key, 'aaa' AS item_code\n),\n\nItemShops AS (\n  SELECT 'aaa' AS item_code, 1 AS shop_id\n  UNION ALL\n  SELECT 'aaa', 2\n  UNION ALL\n  SELECT 'bbb', 1\n  UNION ALL\n  SELECT 'bbb', 2\n),\n\nShops AS (\n  SELECT 1 AS shop_id, 'xxx' AS item_key\n  UNION ALL\n  SELECT 2, 'yyy'\n)\n\nSELECT\n  A.item_key AS A_item_key,\n  C.item_key AS C_item_key,\n  B.item_code,\n  B.shop_id,\nFROM\n  Items A\nLEFT JOIN\n  ItemShops B USING(item_code)\nLEFT JOIN\n  Shops C USING(shop_id)\n```\n\n</details><br />\n\n結果:\n\n<img src='/static/images/articles/38/2f8ce539b921df845ce2a8acbb261c87.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/047787b1-6a7e-46ba-9475-6ca1e3e6594a' alt='image' />\n\n`A_item_key` （＝ `Items.item_key` ）の方を採用すれば、この JOIN 方法で OK 。\n\n\n### パターン3: ItemShops → Shops → Items\n\n\n<details><summary>クエリ</summary>\n\n```sql\nWITH\n\nItems AS (\n  SELECT 'xxx' AS item_key, 'aaa' AS item_code\n),\n\nItemShops AS (\n  SELECT 'aaa' AS item_code, 1 AS shop_id\n  UNION ALL\n  SELECT 'aaa', 2\n  UNION ALL\n  SELECT 'bbb', 1\n  UNION ALL\n  SELECT 'bbb', 2\n),\n\nShops AS (\n  SELECT 1 AS shop_id, 'xxx' AS item_key\n  UNION ALL\n  SELECT 2, 'yyy'\n)\n\nSELECT\n  A.item_key AS A_item_key,\n  C.item_key AS C_item_key,\n  B.item_code,\n  B.shop_id,\nFROM\n  ItemShops B\nLEFT JOIN\n  Shops C USING(shop_id)\nLEFT JOIN\n  Items A USING(item_code)\n```\n\n</details><br />\n\n結果:\n\n<img src='/static/images/articles/38/339abb7c13da6f68fa9d8633db605b45.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/643ba162-2c24-4bc3-9870-32f9a2dc87f4' alt='image' />\n\n2行目については `A_item_key` （＝ `Items.item_key` ）の方を採用しないと `(item_key, item_code)` の組み合わせがおかしくなるが、 3~4 行目に `A_item_key IS NULL` の行ができてしまっている。\n\nしたがって、この JOIN 方法は適切ではない。\n\n## 挙動の理解\n\n上記挙動についての個人的な理解を以下に示す。\n\n### LEFT JOIN してみる①\n\n**パターン1: ItemShops → Shops**\n\n<img src='/static/images/articles/38/5b2e93f30eb8fe0032d30dc9cf99aa2d.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/4e07765d-e3c6-44c7-9248-abbb711f5722' alt='image' />\n\n**パターン2: Items → ItemShops → Shops**\n\n<img src='/static/images/articles/38/69250eed7359f2b3ad624e658c014f2d.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/a4cf2a86-70ed-493d-b14b-b6203ab1127e' alt='image' />\n\n**パターン3: ItemShops → Shops → Items**\n\n<img src='/static/images/articles/38/a4bc9e0ca9538278fe0b0d2a9280975c.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/84303761-e916-4a1b-90b7-d7d7b8411fc3' alt='image' />\n\n### LEFT JOIN してみる②\n\n**パターン1: ItemShops → Shops**\n\n「LEFT JOIN してみる①」と同じ\n\n**パターン2: Items → ItemShops → Shops**\n\n<img src='/static/images/articles/38/dcb49a484e99c69cc5cc56d51d092282.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/de93474e-1224-44ab-bf80-5f3351b4b87c' alt='image' />\n\n**パターン3: ItemShops → Shops → Items**\n\n<img src='/static/images/articles/38/9212c88e9c3936dde7c4a9d30a93f7c5.webp' origin_url='https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/assets/55144709/2c378990-4613-4f35-89b8-cb024e624e9a' alt='image' />\n\n## 所感\n\nLEFT JOIN するときは JOIN 順に気をつけよう（それはそう）\n\n\n","title":"SQL の LEFT JOIN の挙動についての調査メモ","posted_at":"2024年05月12日 26時15分","updated_at":"","tags":[],"description":"この前、 BigQuery で LEFT JOIN するクエリを書いていた時に少しつまづいたので、その時の調査結果を備忘録として残す（おそらく BigQuery に限らず SQL 全般の話だと思うので、記事タイトルは「SQL の」としている）。  ## 前提: 対象データ  次のような3つのテーブルを考える。    ## LEFT JOIN してみる①  この3つのテーブルを JOIN して、 `..."},"config":{"blog_title":"yamamoto-yuta.github.io","site_introduction":"Yamamoto's personal blog","copylight_name":"YutaYamamoto","copylight_url":"https://github.com/yamamoto-yuta","issues_page_url":"https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/issues","favicon_image_url":"https://user-images.githubusercontent.com/55144709/217254968-e131c8d3-3846-4569-8d05-06ccdba503a5.png","author_name":"Yuta Yamamoto","author_introduction":"It's me.","avatar_image_url":{"url":"https://user-images.githubusercontent.com/55144709/217254968-e131c8d3-3846-4569-8d05-06ccdba503a5.png","path":"/static/images/config/avatar.webp"},"sns":[{"name":"GitHub","url":"https://github.com/yamamoto-yuta"},{"name":"Twitter","url":"https://twitter.com/__Y4M4MOTO__"},{"name":"Facebook","url":"https://www.facebook.com/atuXamamoto/"}]},"postsMap":{"15":{"slug":"15","title":"公開業績一覧","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 21時28分","content":"","updated_at":"","description":""},"19":{"slug":"19","title":"個人的TIPSメモ","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年07月02日 23時31分","content":"","updated_at":"","description":""},"21":{"slug":"21","title":"executeScript() で呼ぶ関数の中で別ファイルの関数を呼び出したい","tags":[],"posted_at":"2023年08月05日 24時57分","content":"","updated_at":"","description":""},"22":{"slug":"22","title":"Function Calling 触ってみたメモ","tags":[],"posted_at":"2023年11月25日 20時54分","content":"","updated_at":"","description":""},"23":{"slug":"23","title":"Slack の Slash Commands 作成メモ","tags":[],"posted_at":"2023年11月25日 26時45分","content":"","updated_at":"","description":""},"24":{"slug":"24","title":"Trello + Discord 連携メモ","tags":[],"posted_at":"2023年11月29日 09時10分","content":"","updated_at":"","description":""},"34":{"slug":"34","title":"SQL の CTE の依存関係を JavaScript で可視化してみる","tags":[],"posted_at":"2024年02月25日 20時53分","content":"","updated_at":"","description":""},"35":{"slug":"35","title":"Docker で clasp 環境を構築する","tags":[],"posted_at":"2024年03月03日 25時13分","content":"","updated_at":"","description":""},"36":{"slug":"36","title":"NuPhy Air75 V2 キーボードを買ったので、キー割り当てメモ","tags":[],"posted_at":"2024年03月22日 26時27分","content":"","updated_at":"","description":""},"37":{"slug":"37","title":"Clasp 環境下で Slack API を使ってメッセージを送受信する","tags":[],"posted_at":"2024年03月24日 25時56分","content":"","updated_at":"","description":""}},"metadata":{"https://tech.yappli.io/entry/decoding-multi-encoded-urls":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"BigQuery内にある多重エンコードされたURLのデコード - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本です（ @__Y4M4MOTO__ ）です。 今回は、ヤプリのデータ基盤内にあるウェブビューURLのデコードに取り組んでみました。この記事では、その際につまづいたポイントやその解決策について記します。 ウェブビューURLのエンコード問題 最初のデコード方法｜単純にデコードする 次のデコード方法｜ %25 だけ先にデコードする 最終的なデコード方法｜ r’%25(25)* で先にデコードする まとめ ウェブビューURLのエンコード問題 ヤプリではアプリ内のスクリーンデータを計測しています。これにより、スクリーンビューの集計等の分析を行うことができます。スク…","image_url":"/static/images/external_ogp//fefc59882c98a9c97a4892622419eae4.webp","site_name":"Yappli Tech Blog"},"https://note.com/times_yappli/n/n35e1f320ba35":{"url_domain":"note.com","url_domain_link":"https://note.com","title":"新卒メンバー企画！「部活動紹介ランチ」とその誕生秘話 #今日のヤプリ｜#times_yappli","description":"こんにちは、4月に23新卒データサイエンティストとして入社したもっさん（ @__Y4M4MOTO__ ）です！  今回は、23新卒メンバーで企画・運営した『あなたの好きを見つけよう！23卒企画部活動紹介ランチ』についてご紹介したいと思います！  「部活動紹介ランチ」ってどんなイベント？  そもそも『部活動紹介ランチ』ってどんなイベントなのか？をご紹介します！ 部活動紹介ランチとは、その名の通りヤプリの部活動を紹介するランチ会です。ご飯を食べながら、各部の代表者の3分プレゼンを聞き、部員との交流会を実施しました！ 「部活動紹介ランチ」のイベント概要 イベント企画の誕生経緯  このイベント","image_url":"/static/images/external_ogp//27232b680e47836c12adfb5f940b60a5.webp","site_name":"note（ノート）"},"https://qiita.com/yamamoto-yuta/items/826de40c414655e19ced":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"CSV テキストと Markdown Table をキーボードショートカットで相互変換できる Chrome 拡張機能作ってみた #JavaScript - Qiita","description":"CSV テキストと Markdown Table をキーボードショートカットで相互変換できる Chrome 拡張機能作ってみました。この記事では、作ったものの仕組みや開発にあたって工夫・苦労した点な…","image_url":"/static/images/external_ogp//35bda613446bfdd16efd908632f3938d.webp","site_name":"Qiita"},"https://qiita.com/yamamoto-yuta/items/412b6e8167758e174d0a":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"Docker で dbt プロジェクトを始める方法をいくつか試してみた #Docker - Qiita","description":"この記事は何？Docker を使った dbt 環境の構築方法には様々なものがあります（公式の dbt イメージを使う、 Python イメージに dbt をインストールする、 etc...）。こ…","image_url":"/static/images/external_ogp//b8b958e37334b0e62cca43c00f0f696e.webp","site_name":"Qiita"},"https://tech.yappli.io/entry/tech-book-lt-understand-docker":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"「『Docker よくわからない』を終わりにする本」を読んだので社内LT発表してきた話 - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 プロダクト開発本部では毎月「プラットフォーム技術共有会」という技術共有の場が設けられています。以前、下記の技術書を読んでこちらの会で発表してきました。 zenn.dev この記事では、その時発表した利用を公開しています（発表したのが昨年なので、情報が古くなっている可能性があります。ご了承ください🙇）。 speakerdeck.com 以下、発表資料をテキストに直したものです。 どんな本？ [Q.] どんな本？ [A.] 「Docker よくわからない」を終わりにする本。 [Q.] 読んでみてどうだった？ [A.]…","image_url":"/static/images/external_ogp//13638c9601be9a316f4582e79852ecbf.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/extract-app-store-review-to-spreadsheet-by-trocco":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"trocco で App Store のレビューをスプレッドシートへ書き出す - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 ヤプリは去年、 レビューダイアログ機能 をリリースしました。これによりレビューを用いた効果検証を行いたい場面が増えています。そのため、現在、 iTunes Search API と trocco を使って毎日アプリの評価点数を取得しています。 しかし、この記事を執筆している 2023年5月30日時点では iTunes Search API でレビューのコメントなどは取得できません。基本的に評価点数があれば十分ではあるのですが、コメントなどの訂正情報が欲しい場合もあります。 そこで、今回は trocco を使って …","image_url":"/static/images/external_ogp//1bac9454c8ebdd65cb94200b031ab077.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/lightning-talk-8":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"プロダクト開発本部LT大会#8を開催しました - Yappli Tech Blog","description":"こんにちは！データサイエンティストの山本です（ @__Y4M4MOTO__ ）。 先日、プロダクト開発本部で LT 大会が開催されました。8回目を迎えた今回も、プロダクト開発本部を始めとして他部署の方々も参加してくださり大盛況でした！ この記事では、当日の様子やその発表内容などについてご紹介したいと思います。 どんな大会？ LT 大会は5分程度の短いプレゼン（ライトニングトーク）を行うイベントです。プロダクト開発本部の LT 大会は次のルールで開催されています: 発表者及び発表者順は基本挙手制 発表時間は1人5分目安 発表内容は自由 発表内容が自由ということで、毎回、自己紹介や過去の経験談、個…","image_url":"/static/images/external_ogp//bec037281cca17480c802a8c8bc6d991.webp","site_name":"Yappli Tech Blog"},"https://zenn.dev/aidemy/articles/425cf7d9f31945":{"url_domain":"zenn.dev","url_domain_link":"https://zenn.dev","title":"質問対応業務を DX した話","description":null,"image_url":"/static/images/external_ogp//aa81bc208d05362be368f8703ccbc63b.webp","site_name":"Zenn"},"https://tech.yappli.io/entry/gig-program2022":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"内定者インターン生が G.I.G. プログラムに参加して Professional Data Engineer 認定資格を取得した話 - Yappli Tech Blog","description":"Google Cloud Japan 様主催の G.I.G. Japan Program というトレーニングプログラムに内定者インターン生が参加し、 Google Cloud Professional Data Engineer 認定資格をした体験記です。","image_url":"/static/images/external_ogp//8252492c363e32205e801495bfce4867.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/optimize_notifications_release_time":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"インターン生がプッシュ通知の配信時刻最適化に取り組んでみた！ - Yappli Tech Blog","description":"はじめに 初めまして。長岡技術科学大学の山本（ もっさん / @__Y4M4MOTO__ ）と申します。9 月中旬から 11 月までの 2 カ月半、プロダクト開発本部の技術戦略室にて、データサイエンティストのインターンをさせていただきました。この記事では、私がインターン中に取り組んだ「プッシュ通知の配信時刻最適化 PoC」の話をしたいと思います。 背景 Yappliの主要機能の1つにプッシュ通知があります。今回、クライアントの満足度向上のために、プッシュ通知の開封率を高める手段を検証しました。アイデアとして、以下を考えました。 ユーザがすぐ開封しやすい時間を推定し、その時間にプッシュ通知を配信…","image_url":"/static/images/external_ogp//5982363a6569af359c39495408362211.webp","site_name":"Yappli Tech Blog"},"https://github.com/yamamoto-yuta/csv2md-shortcut/issues/35":{"url_domain":"github.com","url_domain_link":"https://github.com","title":"popup でも変換できるようにする · Issue #35 · yamamoto-yuta/csv2md-shortcut · GitHub","description":"ブラウザ以外のエディタでもサクッと使いたいので。","image_url":"/static/images/external_ogp//9ad5ca706cab231c15e8cb46dfe2bf0f.webp","site_name":"GitHub"},"https://github.com/yamamoto-yuta/chrome-extension-injected-code-debug":{"url_domain":"github.com","url_domain_link":"https://github.com","title":"GitHub - yamamoto-yuta/chrome-extension-injected-code-debug","description":"Contribute to yamamoto-yuta/chrome-extension-injected-code-debug development by creating an account on GitHub.","image_url":"/static/images/external_ogp//860351a12e290ae311686c939c45298c.webp","site_name":"GitHub"},"https://tech.yappli.io/entry/yapplitechconf2023-data":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"「次の10年を戦える分析用データ基盤構築の第一歩 - dbtによる基盤刷新とクエリ費用90%削減への取り組み -」という発表をしてきました！  #Yappli Tech Conference 2023 - Yappli Tech Blog","description":"こんにちは！プロダクト開発本部・データサイエンティストの山本（@__Y4M4MOTO__ ）です。 先日開催された Yappli Tech Conference 2023 にて、 「次の10年を戦える分析用データ基盤構築の第一歩 - dbtによる基盤刷新とクエリ費用90%削減への取り組み -」というタイトルで発表してきました！（色々詰め込んだら発表タイトルが長くなってしまいました…😇） この記事では、そのときの発表動画と資料を公開しています！ アーカイブ動画 youtu.be スライド speakerdeck.com 発表概要 本発表では次の2つについてお話ししています。 ヤプリの分析用データ…","image_url":"/static/images/external_ogp//642a1ee5c7fa2a9c6fd11a82fb3ccfc6.webp","site_name":"Yappli Tech Blog"},"https://dev.classmethod.jp/articles/understand-openai-function-calling/":{"url_domain":"dev.classmethod.jp","url_domain_link":"https://dev.classmethod.jp","title":"[OpenAI] Function callingで遊んでみたら本質が見えてきたのでまとめてみた | DevelopersIO","description":"Function callingというよりFunction call preparingでした。","image_url":"https://devio2023-media.developers.io/wp-content/uploads/2023/04/eyecatch_openai_1200x630.png","site_name":"クラスメソッド発「やってみた」系技術メディア | DevelopersIO"},"https://ngrok.com/download":{"url_domain":"ngrok.com","url_domain_link":"https://ngrok.com","title":"Download","description":null,"image_url":null,"site_name":null},"https://ngrok.com/docs/errors/err_ngrok_6022/":{"url_domain":"ngrok.com","url_domain_link":"https://ngrok.com","title":"ERR_NGROK_6022 | ngrok documentation","description":"Message","image_url":"/static/images/external_ogp//3bc3eb06ac879a94e187d8c615205e93.webp","site_name":null},"https://qiita.com/yamamoto-yuta/items/474e03cd28dec55fd5a2":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"trocco のカスタム変数ループ実行で複数の BigQuery テーブルを一括クローンする #BigQuery - Qiita","description":"この記事は trocco Advent Calendar 2023 の 2 日目の記事となります。この記事では、trocco のカスタム変数ループ実行を使い、複数の BigQuery テーブルを一…","image_url":"/static/images/external_ogp//6a429ed641210952ac59c2db89b32030.webp","site_name":"Qiita"},"https://tech.yappli.io/entry/lightning-talk-10":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"プロダクト開発本部LT大会#10を開催しました - Yappli Tech Blog","description":"（本記事は Yappli Advent Calendar 2023 （2枚目） の2日目の記事です！🎄📅） こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 先日、プロダクト開発本部にてLT大会を開催しました！（遂に10回目です！✨） 今回はなんと取締役執行役員CTOのげんきさんが久々に発表者エントリー！！さらに、当日の飛び入りエントリーもあり、発表者と聴講参加者合わせて約 50 人もの方々にご参加いただきました！🙌 この記事では、当日の様子やその発表内容などについてご紹介します！ どんな大会？ 発表内容 PICK UP! 『ゴミの日リマインダー』 『植物を育て…","image_url":"/static/images/external_ogp//3b22aeddd0ff17d06ce6b89971485537.webp","site_name":"Yappli Tech Blog"},"https://chrome.google.com/webstore/detail/slackdeck/cocnkjpcbmoopfpmogblnjpjdfcaohod":{"url_domain":"chrome.google.com","url_domain_link":"https://chrome.google.com","title":"SlackDeck - Chrome Web Store","description":"Arrange channels side-by-side","image_url":"/static/images/external_ogp//7a7aa934b286dbd42fc111be0535c790.webp","site_name":null},"https://tech.yappli.io/entry/zapier-slack-to-jira-with-azure-openai":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"Zapier を使って Slack → Jira 起票＆ Azure OpenAI Service でチケットタイトル生成 - Yappli Tech Blog","description":"（本記事は Yappli Advent Calendar 2023 （1枚目） の5日目の記事です！🎄📅） こんにちは！データサイエンティストの山本（ @__Y4M4MOTO__ ）です。 最近、データサイエンスチーム（以下、 DS チーム）では社内からの依頼（集計、技術相談 etc. ）を Jira でチケット管理をするようにしました。チケット運用を始めるにあたってネックになったのが「起票するの、面倒くさくない…？」という点です。 その点を解決するため、 Slack のメッセージにリアクションを押すとその内容で Jira のチケットを作成してくれる Zapier ワークフローを作成しました。…","image_url":"/static/images/external_ogp//ad87198dd41d620ae8a30d78a13c55e2.webp","site_name":"Yappli Tech Blog"},"https://note.com/times_yappli/n/nfc3839fc0544":{"url_domain":"note.com","url_domain_link":"https://note.com","title":"ヤプリもSlack コミュニケーションガイドラインをつくった話｜#times_yappli","description":"こんにちは！23卒データサイエンティストのもっさん（ @__Y4M4MOTO__ ）です！  この度、ヤプリも社内でのSlackコミュニケーションをより円滑にするためのガイドラインをつくりました〜🎉  私もガイドラインの策定に携わったので、その経緯や過程、展開した後の社内の反応などについて、この記事でご紹介できればと思います！  ルールをつくったきっかけ  私がガイドラインづくりに携わったきっかけは、新卒 BootCamp でカスタマーサクセス本部の定例に出席したことです。その回の定例にて、 Slack でのメンションの取り扱いが議題に上がりました。  従来はお休み中の人へのメンション","image_url":"/static/images/external_ogp//7359ff90c9fd7dbb73c767e9dcdf806a.webp","site_name":"note（ノート）"},"https://qiita.com/yamamoto-yuta/items/593e70a832733df5e9a1":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"trocco のカスタム変数ループ実行で BigQuery に作成した UDF をコピーする #BigQuery - Qiita","description":"※ この記事は trocco® Advent Calendar 2023 シリーズ2 、 Yappli Advent Calendar 2023 （2枚目）の 20 日目の投稿です。この記事では、…","image_url":"/static/images/external_ogp//a05a4625bbda19906d7edd3ef6ba0135.webp","site_name":"Qiita"},"https://note.com/dd_techblog/n/n3876f38cc5fc":{"url_domain":"note.com","url_domain_link":"https://note.com","title":"SQLスクリプト上でのテーブルや共通テーブル式の依存関係を可視化する｜Dentsu Digital Tech Blog","description":"電通デジタルでデータサイエンティストを務める吉田です。 こちらはDentsu Digital Tech Blogアドベントカレンダー16日目の記事です。   今回はSQLスクリプトを解析して参照されているテーブルや共通テーブル式の依存関係を可視化するツールを作成したのでご紹介いたします。   どのようなものを作ったか  電通デジタルデータサイエンスグループでは普段、主にBigQuery上でSQLスクリプトを記述してデータの抽出や集計・整形作業を行うことが多いです。   最近ではBigQuery MLでBoostingTreeやAutoML Tablesのモデルが作成できるようになるなど","image_url":"/static/images/external_ogp//c4664f94343898956e3ab7d3df306779.webp","site_name":"note（ノート）"},"https://github.com/yamamoto-yuta/sql-cte-visualizer?tab=readme-ov-file":{"url_domain":"github.com","url_domain_link":"https://github.com","title":"GitHub - yamamoto-yuta/sql-cte-visualizer","description":"Contribute to yamamoto-yuta/sql-cte-visualizer development by creating an account on GitHub.","image_url":"/static/images/external_ogp//28f798cf51f6276d4cb3ab020a8c6b91.webp","site_name":"GitHub"},"https://github.com/taozhi8833998/node-sql-parser":{"url_domain":"github.com","url_domain_link":"https://github.com","title":"GitHub - taozhi8833998/node-sql-parser: Parse simple SQL statements into an abstract syntax tree (AST) with the visited tableList and convert it back to SQL","description":"Parse simple SQL statements into an abstract syntax tree (AST) with the visited tableList and convert it back to SQL - taozhi8833998/node-sql-parser","image_url":"/static/images/external_ogp//02def1dc561894f82fa0e950b9ed3407.webp","site_name":"GitHub"},"https://zenn.dev/carenet/articles/d42b236ae69bc5":{"url_domain":"zenn.dev","url_domain_link":"https://zenn.dev","title":"SQLパーサーを使用してみた","description":null,"image_url":"/static/images/external_ogp//83803c4aa8a10a187949b1aa1ac241df.webp","site_name":"Zenn"},"https://qiita.com/kujirahand/items/eab914bc77cf1bc0837c":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"PEG.jsを使う #PEG - Qiita","description":"パーサジェネレータのPEG.jsを使うと手軽に構文解析器が作れます。ここに使い方をメモしておきます。始め方PEG.jsはWeb上で試すことができ、そこで文法チェックができるのがJSならではの素…","image_url":"/static/images/external_ogp//cc2f0a8f25a3a2bb2f91509064248af4.webp","site_name":"Qiita"},"https://zenn.dev/yuji/articles/7eb96460317222":{"url_domain":"zenn.dev","url_domain_link":"https://zenn.dev","title":"【D3.js】 hierarchy で階層ツリーの作成・ノードハイライトの有効","description":null,"image_url":"/static/images/external_ogp//e2538f9949504ce6c6d1c7443a6f2932.webp","site_name":"Zenn"},"https://qiita.com/mmmmk/items/f7c70024938b0e38e4c9":{"url_domain":"qiita.com","url_domain_link":"https://qiita.com","title":"【JavaScript】手軽に綺麗な「要素を矢印で繋いだグラフ」を描く方法（画像付き） #JavaScript - Qiita","description":"概要JavaScriptでグラフ（ノードとエッジの集合の方）を作りたい。JavaScriptでグラフを描画できるd3-graphvizの使い方や、色変更などできることを調査した。基本の使い方…","image_url":"/static/images/external_ogp//70884159a21236a438fa28bf16f66038.webp","site_name":"Qiita"},"https://tech.yappli.io/entry/update-dbt-infra-dev-flow":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"dbt 基盤の開発フローを改善した話 - Yappli Tech Blog","description":"こんにちは！データサイエンスグループの山本です（ @__Y4M4MOTO__ ）です。 さて、ヤプリのデータサイエンスグループ（以下、DSグループ）では2023年から分析用データ基盤の dbt 移行に取り組んでいます。 dbt 移行に至った経緯などについては昨年開催された Yappli Tech Conference 2023 にて発表しているので、そちらをご覧いただければ幸いです。 tech.yappli.io dbt 移行に伴い、ヤプリの各種サービスが参照しているデータマートも dbt 移行後のものへ切り替えを行っています。 dbt 移行後の分析用データ基盤（以後、 dbt 基盤）の運用が…","image_url":"/static/images/external_ogp//8843a08bfdf8d6096506f9c793057798.webp","site_name":"Yappli Tech Blog"},"https://tech.yappli.io/entry/replace-ya-mart-to-dbt":{"url_domain":"tech.yappli.io","url_domain_link":"https://tech.yappli.io","title":"Yappli Analytics のデータマートを dbt へ切り替えた話 - Yappli Tech Blog","description":"こんにちは！データサイエンスグループの山本です（ @__Y4M4MOTO__ ）です。今年の4月で入社して1年が経ちました。あっという間ですね…。 さて、ヤプリのデータサイエンスグループ（以下、DSグループ）では2023年から分析用データ基盤の dbt 移行に取り組んでいます。 dbt 移行に至った経緯などについては昨年開催された Yappli Tech Conference 2023 にて発表しているので、そちらをご覧いただければ幸いです。 tech.yappli.io dbt 移行に伴い、ヤプリの各種サービスが参照しているデータマートも dbt 移行後のものへ切り替えを行っています。昨年1…","image_url":"/static/images/external_ogp//5491c78ddbe36683f9e644909a287ea2.webp","site_name":"Yappli Tech Blog"}},"relatedPosts":[{"slug":"34","title":"SQL の CTE の依存関係を JavaScript で可視化してみる","tags":[],"posted_at":"2024年02月25日 20時53分","content":"","updated_at":"","description":""},{"slug":"24","title":"Trello + Discord 連携メモ","tags":[],"posted_at":"2023年11月29日 09時10分","content":"","updated_at":"","description":""},{"slug":"19","title":"個人的TIPSメモ","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年07月02日 23時31分","content":"","updated_at":"","description":""},{"slug":"36","title":"NuPhy Air75 V2 キーボードを買ったので、キー割り当てメモ","tags":[],"posted_at":"2024年03月22日 26時27分","content":"","updated_at":"","description":""},{"slug":"15","title":"公開業績一覧","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 21時28分","content":"","updated_at":"","description":""},{"slug":"23","title":"Slack の Slash Commands 作成メモ","tags":[],"posted_at":"2023年11月25日 26時45分","content":"","updated_at":"","description":""},{"slug":"37","title":"Clasp 環境下で Slack API を使ってメッセージを送受信する","tags":[],"posted_at":"2024年03月24日 25時56分","content":"","updated_at":"","description":""},{"slug":"21","title":"executeScript() で呼ぶ関数の中で別ファイルの関数を呼び出したい","tags":[],"posted_at":"2023年08月05日 24時57分","content":"","updated_at":"","description":""},{"slug":"22","title":"Function Calling 触ってみたメモ","tags":[],"posted_at":"2023年11月25日 20時54分","content":"","updated_at":"","description":""},{"slug":"35","title":"Docker で clasp 環境を構築する","tags":[],"posted_at":"2024年03月03日 25時13分","content":"","updated_at":"","description":""}]},"__N_SSG":true}