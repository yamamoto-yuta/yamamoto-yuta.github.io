{"pageProps":{"post":{"slug":"18","content":"前から気になっていたブラウザ拡張機能の開発フレームワーク「Plasmo」を触ってみたので、その時のメモ。\n\n基本的に下記の記事をなぞる形で触っていった。\n\n> [ブラウザ拡張機能を作るためのReactフレームワーク『Plasmo』](https://zenn.dev/nado1001/articles/plasmo-browser-extension)\n\nなので、ここでは上記記事をなぞった際につまづいた箇所や個人的な所感などについて記す。\n\n## 環境構築を Docker でやってみた\n\nローカル環境がごちゃごちゃするのが個人的に嫌だったので、 Docker で環境構築してみた。\n\n上記記事や公式ドキュメントには特に Docker についての言及は無かったが、 Node.js があれば十分だったので適当な Node.js のイメージを持ってこればいけるはず。\n\nちなみに、 Plasmo のシステム要件として Node.js が 16.14 以降であることが挙げられていた。\n\n> Node.js 16.14.x or later  \n> 引用: https://docs.plasmo.com/framework#system-requirements\n\nただ、 Node.js のリリースケジュールによると 16 系は今年（記事執筆時は2023年6月4日）の9月で End-of-life とのことだったので、今回は 18 系を使ってみることにした。\n\n> Node.js のリリーススケジュール:  \n> https://github.com/nodejs/Release#release-schedule\n\n以上を踏まえて作成した `docker-compose.yml` が下記の通り:\n\n```yml\nversion: '3'\n\nservices:\n  app:\n    image: node:18.16.0\n    volumes:\n      - .:/usr/src/app\n    working_dir: /usr/src/app\n    tty: true\n```\n\nPlasmo プロジェクトの作成は `docker compose run` コマンドを用いて下記で行える。なお、 Plasmo は pnpm コマンドの利用を推奨していたが、 Node.js のイメージにデフォルトで入っていなかったので今回はデフォルトで入っている npm コマンドで進めた。\n\n```\n$ docker compose run app npm create plasmo\n```\n\nプロジェクト作成の際に色々訊かれたが、今回は拡張機能の名前を `learn-plasmo` にした以外は既定値で回答した。\n\nDevelopment server の起動も同様に下記のコマンドで行える。プロジェクトディレクトリ（ `learn-plasmo/` ）に移動する必要がある点に注意。\n\n```\n$ docker compose run app bash -c \"cd learn-plasmo && npm run dev\"\n```\n\n記事中に Storage API を利用するためにパッケージを追加インストールするくだりがあるが、それも下記コマンドで行える:\n\n```\n$ docker compose run app bash -c \"cd learn-plasmo && npm install @plasmohq/storage react-hook-form\"\n```\n\n他にも Messaging API を利用するためにも追加インストールのくだりがあったが、それも下記コマンドで行える:\n\n```\n$ docker compose run app bash -c \"cd learn-plasmo && npm install @plasmohq/messaging\"\n```\n\n## つまづいた点メモ\n\n* 「 [Storageを利用する](https://zenn.dev/nado1001/articles/plasmo-browser-extension#storage%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B) 」のところでなぜか入力値が保存されなくてつまづいたが、一度 Production build で動かした後 Development server に戻ってきたらちゃんと保存されるようになった。原因は不明…\n* 「 [New Tab Page](https://zenn.dev/nado1001/articles/plasmo-browser-extension#new-tab-page) 」のところは自分が Vivaldi ユーザだったせいでそもそもカスタマイズできなかった\n* ファイル追加等ではホットリロードが効かないようなので、 Development server を再起動した上でブラウザの「拡張機能の設定」でパッケージを再読み込みさせた方が良さそう\n* Ctrl + C でコンテナを止めた後にコンテナが Exited で残ったままになっていた。こまめに消す必要がありそう…？\n\n## 個人的な所感\n\nデフォルトで下記の機能が付いてるのが良かった:\n\n* dev/prod のビルド分け\n* ホットリロード\n\nまた、今回は試さなかったが下記の機能も良さそうだった:\n\n* Chrome Web Store への自動デプロイ\n* Google Analytics と連携できるっぽい（→ [公式ドキュメント](https://docs.plasmo.com/quickstarts/with-google-analytics) ）\n\nメンテナンスもこまめにされてそうなので、これから拡張機能作るときは Plasmo 使うようにしてみようかな…\n\n","title":"Plasmo 触ってみたメモ","posted_at":"2023年06月04日 21時54分","updated_at":"2023年06月04日 22時05分","tags":[],"description":"前から気になっていたブラウザ拡張機能の開発フレームワーク「Plasmo」を触ってみたので、その時のメモ。  基本的に下記の記事をなぞる形で触っていった。  > [ブラウザ拡張機能を作るためのReactフレームワーク『Plasmo』](https://zenn.dev/nado1001/articles/plasmo-browser-extension)  なので、ここでは上記記事をなぞった際につま..."},"config":{"blog_title":"yamamoto-yuta.github.io","site_introduction":"Yamamoto's personal blog","copylight_name":"YutaYamamoto","copylight_url":"https://github.com/yamamoto-yuta","issues_page_url":"https://github.com/yamamoto-yuta/yamamoto-yuta.github.io/issues","favicon_image_url":"https://user-images.githubusercontent.com/55144709/217254968-e131c8d3-3846-4569-8d05-06ccdba503a5.png","author_name":"Yuta Yamamoto","author_introduction":"It's me.","avatar_image_url":{"url":"https://user-images.githubusercontent.com/55144709/217254968-e131c8d3-3846-4569-8d05-06ccdba503a5.png","path":"/static/images/config/avatar.webp"},"sns":[{"name":"GitHub","url":"https://github.com/yamamoto-yuta"},{"name":"Twitter","url":"https://twitter.com/__Y4M4MOTO__"},{"name":"Facebook","url":"https://www.facebook.com/atuXamamoto/"}]},"postsMap":{"13":{"slug":"13","title":"自己紹介","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 19時44分","content":"","updated_at":"","description":""},"15":{"slug":"15","title":"Works","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 21時28分","content":"","updated_at":"","description":""},"16":{"slug":"16","title":"API経由でSlackへカスタム絵文字を追加できないか調査したときのメモ","tags":[],"posted_at":"2023年05月07日 01時56分","content":"","updated_at":"","description":""},"17":{"slug":"17","title":"いつも使ってるSlack向け絵文字ジェネレーターがどうやって絵文字を生成してるか調べてみたメモ","tags":[],"posted_at":"2023年05月08日 01時08分","content":"","updated_at":"","description":""},"19":{"slug":"19","title":"個人的TIPSメモ","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年07月02日 23時31分","content":"","updated_at":"","description":""}},"metadata":{},"relatedPosts":[{"slug":"16","title":"API経由でSlackへカスタム絵文字を追加できないか調査したときのメモ","tags":[],"posted_at":"2023年05月07日 01時56分","content":"","updated_at":"","description":""},{"slug":"17","title":"いつも使ってるSlack向け絵文字ジェネレーターがどうやって絵文字を生成してるか調べてみたメモ","tags":[],"posted_at":"2023年05月08日 01時08分","content":"","updated_at":"","description":""},{"slug":"19","title":"個人的TIPSメモ","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年07月02日 23時31分","content":"","updated_at":"","description":""},{"slug":"15","title":"Works","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 21時28分","content":"","updated_at":"","description":""},{"slug":"13","title":"自己紹介","tags":[{"name":"star","color":"FBCA04","description":""}],"posted_at":"2023年02月07日 19時44分","content":"","updated_at":"","description":""}]},"__N_SSG":true}